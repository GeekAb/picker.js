.datepicker {
  border-radius: 0.125rem;
  direction: ltr; }
  .datepicker table {
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none; }
  .table-striped .datepicker table tr td, .table-striped .datepicker table tr th {
    background-color: transparent; }

.popper {
  position: absolute; }

.datepicker {
  -webkit-transform-origin: top left;
      -ms-transform-origin: top left;
       -o-transform-origin: top left;
          transform-origin: top left;
  -webkit-animation: fade-in 0.3s linear;
       -o-animation: fade-in 0.3s linear;
          animation: fade-in 0.3s linear; }
  .datepicker .card.view {
    width: 20.5625rem; }
    .datepicker .card.view .btn {
      margin-bottom: 0; }
    .datepicker .card.view .card-header {
      color: #fff;
      background-color: #009688; }
      .datepicker .card.view .card-header .card-text {
        margin-bottom: .325rem; }
      .datepicker .card.view .card-header .card-title {
        margin-bottom: 0;
        font-size: 2rem; }
    .datepicker .card.view .card-block {
      padding-top: .5rem;
      padding-bottom: .5rem; }
      .datepicker .card.view .card-block .card-title {
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-align: center;
        -webkit-align-items: center;
            -ms-flex-align: center;
                align-items: center;
        margin-bottom: 0; }
        .datepicker .card.view .card-block .card-title .prev, .datepicker .card.view .card-block .card-title .next {
          padding-right: 0;
          padding-left: 0;
          color: rgba(0, 0, 0, 0.54); }
        .datepicker .card.view .card-block .card-title .prev {
          margin-right: auto; }
        .datepicker .card.view .card-block .card-title .switch {
          color: rgba(0, 0, 0, 0.87);
          text-transform: none; }
        .datepicker .card.view .card-block .card-title .next {
          margin-left: auto; }
      .datepicker .card.view .card-block .card-text {
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-pack: center;
        -webkit-justify-content: center;
            -ms-flex-pack: center;
                justify-content: center; }
        .datepicker .card.view .card-block .card-text table tr td, .datepicker .card.view .card-block .card-text table tr th {
          width: 3rem;
          height: 2.5rem;
          text-align: center; }
        .datepicker .card.view .card-block .card-text table tr th.dow {
          font-size: 0.75rem;
          font-weight: 500;
          color: rgba(0, 0, 0, 0.54); }
          .datepicker .card.view .card-block .card-text table tr th.dow.disabled {
            color: rgba(0, 0, 0, 0.26); }
        .datepicker .card.view .card-block .card-text table tr td.old, .datepicker .card.view .card-block .card-text table tr td.new {
          color: rgba(0, 0, 0, 0.26);
          visibility: hidden; }
        .datepicker .card.view .card-block .card-text table tr td .bmd-btn-icon {
          width: 2.375rem;
          min-width: 2.375rem;
          height: 2.375rem;
          font-size: 0.75rem;
          font-weight: 500; }
        .datepicker .card.view .card-block .card-text table tr td.focused .bmd-btn-icon {
          color: inherit;
          background-color: rgba(153, 153, 153, 0.2);
          border-color: rgba(153, 153, 153, 0.2); }
        .datepicker .card.view .card-block .card-text table tr td.highlighted .bmd-btn-icon {
          color: #03a9f4; }
        .datepicker .card.view .card-block .card-text table tr td.today .bmd-btn-icon {
          font-weight: 600;
          color: #009688; }
        .datepicker .card.view .card-block .card-text table tr td.active .bmd-btn-icon, .datepicker .card.view .card-block .card-text table tr td.active.highlighted .bmd-btn-icon {
          color: #fff;
          background-color: #009688;
          border-color: #009688; }
    .datepicker .card.view .card-footer {
      display: -webkit-box;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: end;
      -webkit-justify-content: flex-end;
          -ms-flex-pack: end;
              justify-content: flex-end;
      -webkit-box-shadow: none;
              box-shadow: none; }

@-webkit-keyframes fade-in {
  from {
    opacity: 0;
    -webkit-transform: scale(0.3);
            transform: scale(0.3); }
  60% {
    opacity: 1;
    -webkit-transform: scale(1.1);
            transform: scale(1.1); } }

@-o-keyframes fade-in {
  from {
    opacity: 0;
    -o-transform: scale(0.3);
       transform: scale(0.3); }
  60% {
    opacity: 1;
    -o-transform: scale(1.1);
       transform: scale(1.1); } }

@keyframes fade-in {
  from {
    opacity: 0;
    -webkit-transform: scale(0.3);
         -o-transform: scale(0.3);
            transform: scale(0.3); }
  60% {
    opacity: 1;
    -webkit-transform: scale(1.1);
         -o-transform: scale(1.1);
            transform: scale(1.1); } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
