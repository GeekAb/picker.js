{"version":3,"file":"picker.umd.js","sources":["../js/base.js","../js/constants.js","../js/templates/baseTemplate.js","../js/templates/bs3Template.js","../js/templates/bs4Template.js","../js/templates/bmd4Template.js","../js/templates/stringTemplate.js","../js/preset.js","../js/renderer.js","../js/eventManager.js","../js/util/dateArray.js","../js/util/moments.js","../js/dateRangePicker.js","../js/datepicker.js","../js/index.js"],"sourcesContent":["import extend from 'extend'\nimport stringify from 'stringify-object'\n\nconst Default = {\n  debug: false\n}\n\nconst Base = class {\n  constructor(...configs) {\n    this.config = extend(true, {}, Default, ...configs)\n  }\n\n  i18n(key) {\n    return this.config.i18n[this.config.lang][key] || ''\n  }\n\n  dispose(dataKey = null) {\n    if (dataKey) {\n      this.$element.data(dataKey, null)\n    }\n    this.$element = null\n    this.config = null\n  }\n\n  required(object, name) {\n    if (!object) {\n      this.error(`this.${name} was not provided in ${this.constructor.name}`)\n    }\n  }\n\n  //---------------------\n  // logger shortcuts\n\n  /* eslint-disable no-console */\n  debug(...args) {\n    if (this.config.debug) {\n      console.debug(...args)\n    }\n  }\n\n  info(...args) {\n    console.info(...args)\n  }\n\n  warn(...args) {\n    console.warn(...args)\n  }\n\n  error(...args) {\n    console.error(...args)\n  }\n\n  /* eslint-enable no-console */\n\n  throwError(msg) {\n    throw new Error(`[${this.constructor.name}] ${msg}`)\n  }\n\n  debugDump(msg, obj) {\n    if (this.config.debug) {\n      this.debug(`${msg}:\\n${this.dump(obj)}`)\n    }\n  }\n\n  dump(obj) {\n    return stringify(obj)\n  }\n}\n\nexport default Base\n","/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\nexport const NAME = 'datepicker'\nexport const Data = {\n  KEY: `${NAME}`,\n  API_KEY: '.data-api',\n  MOMENT: 'moment',\n  PROVIDE: 'provide'\n}\n\nexport const JQUERY_NAME = NAME // `bmd${NAME.charAt(0).toUpperCase() + NAME.slice(1)}`\n\nexport const View = {\n  DAYS: 0,\n  MONTHS: 1,\n  YEARS: 2,\n  DECADES: 3,\n  CENTURIES: 4\n}\n\nexport const Unit = {\n  // units\n  DAY: 'day',\n  WEEK: 'week',\n  MONTH: 'month',\n  YEAR: 'year',\n  DECADE: 'decade',\n  CENTURY: 'century'\n}\n\nexport const EVENT_KEY = `.${Data.KEY}`\nexport const CHANGE_EVENT_KEY = `.change${EVENT_KEY}`\n\nexport const Event = {\n  DATE_CHANGE: `date${CHANGE_EVENT_KEY}`,\n  SHOW: `show${EVENT_KEY}`,\n  //  SHOWN          : `shown${EVENT_KEY}`,\n  HIDE: `hide${EVENT_KEY}`,\n  //  HIDDEN         : `hidden${EVENT_KEY}`,\n  CLICK_DATA_API: `click${EVENT_KEY}${Data.API_KEY}`,\n\n  // units\n  DAY_CHANGE: `${Unit.DAY}${CHANGE_EVENT_KEY}`,\n  WEEK_CHANGE: `${Unit.WEEK}${CHANGE_EVENT_KEY}`,\n  MONTH_CHANGE: `${Unit.MONTH}${CHANGE_EVENT_KEY}`,\n  YEAR_CHANGE: `${Unit.YEAR}${CHANGE_EVENT_KEY}`,\n  DECADE_CHANGE: `${Unit.DECADE}${CHANGE_EVENT_KEY}`,\n  CENTURY_CHANGE: `${Unit.CENTURY}${CHANGE_EVENT_KEY}`\n}\n\nexport const ClassName = {\n  NAME: NAME,\n  PREV: 'prev',\n  NEXT: 'next',\n  DOW: `dow`,\n  SELECTED: `selected`,\n  HIGHLIGHTED: `highlighted`,\n  DISABLED: `disabled`,\n  ACTIVE: `active`,\n  FOCUSED: `focused`,\n  NEW: `new`,\n  OLD: `old`,\n  VIEW: `view`,\n\n  // buttons\n  TODAY: `today`,\n  CLEAR: `clear`,\n  CANCEL: `cancel`,\n  OK: `ok`,\n\n  // labels for replacement of text\n  LABEL_YEAR: `label-year`,\n  LABEL_DATE: `label-date`,\n  LABEL_TITLE: `title`,\n\n  POPPER: `popper`,\n\n\n  SWITCH: `switch`,\n\n  INLINE: `inline`,\n  RTL: `rtl`,\n\n  DAYS: `days`,\n  MONTHS: `months`,\n  YEARS: `years`,\n  DECADES: `decades`,\n  CENTURIES: `centuries`,\n\n  // range\n  RANGE: 'range',\n  RANGE_START: 'range-start',\n  RANGE_END: 'range-end'\n}\n\nexport const Selector = {\n  DATA_PROVIDE: `[data-${Data.PROVIDE}=\"${NAME}\"]`,\n\n  DATEPICKER: `.${NAME}`,\n\n  ACTIVE: `.${ClassName.ACTIVE}`,\n  FOCUSED: `.${ClassName.FOCUSED}`,\n  OLD: `.${ClassName.OLD}`,\n  NEW: `.${ClassName.NEW}`,\n\n  // buttons\n  TODAY: `.${ClassName.TODAY}`,\n  CLEAR: `.${ClassName.CLEAR}`,\n  CANCEL: `.${ClassName.CANCEL}`,\n  OK: `.${ClassName.OK}`,\n\n  // labels for replacement of text\n  LABEL_YEAR: `.${ClassName.LABEL_YEAR}`,\n  LABEL_DATE: `.${ClassName.LABEL_DATE}`,\n  LABEL_TITLE: `.${ClassName.LABEL_TITLE}`,\n\n  PREV: `.${ClassName.PREV}`,\n  NEXT: `.${ClassName.NEXT}`,\n\n  SWITCH: `.${ClassName.SWITCH}`,\n  POPPER: `.${ClassName.POPPER}`,\n\n  DAY: `.${Unit.DAY}`,\n  MONTH: `.${Unit.MONTH}`,\n  YEAR: `.${Unit.YEAR}`,\n\n  DAYS: `.${ClassName.DAYS}`,\n  MONTHS: `.${ClassName.MONTHS}`,\n  YEARS: `.${ClassName.YEARS}`,\n  DECADES: `.${ClassName.DECADES}`,\n  CENTURIES: `.${ClassName.CENTURIES}`\n}\n\n\nexport const Visibility = {\n  HIDDEN: {visibility: 'hidden'},\n  VISIBLE: {visibility: 'visible'}\n}\n","import Base from './../base'\nimport {ClassName, Data} from './../constants'\n\n/**\n * This class registers overridable partials in the {Default} hash constant.  Subclasses can override this\n * {Default} config by passing in any keys as overrides.\n *\n * Interpolation is delayed until #createTemplate is called in order to allow Subclasses to make use of any\n * superclasses' partials.  Tokens are denoted by %% e.g. %header% will be replaced by config.header.\n *\n */\nconst Default = {}\n\nconst BaseTemplate = class extends Base {\n\n  constructor(...configs) {\n    super(Default, ...configs)\n  }\n\n  /**\n   * Primarily here for override purposes\n   * @returns non-interpolated template\n   */\n  getTemplate() {\n    return `<div class=\"${ClassName.NAME}\">\n      ${this.generateView(ClassName.DAYS)}\n      ${this.generateView(ClassName.MONTHS)}\n      ${this.generateView(ClassName.YEARS)}\n      ${this.generateView(ClassName.DECADES)}\n      ${this.generateView(ClassName.CENTURIES)}\n    </div>`\n  }\n\n  generateView(className) { // eslint-disable-line no-unused-vars\n    throw new Error('subclass must implement or override #getTemplate so this is not called.')\n  }\n\n  interpolate() {\n    return this.getTemplate()\n      // .replace(/%header%/g, this.config.header)\n      // .replace(/%body%/g, this.config.body)\n      // .replace(/%footer%/g, this.config.footer)\n      .replace(/%arrow\\.left%/g, this.config.markup.arrow.left || '')\n      .replace(/%arrow\\.right%/g, this.config.markup.arrow.right || '')\n  }\n\n  getDaySwitchFormat() {\n    return `ddd, MMM D` // Thu, Apr 13\n  }\n\n  getDayOfWeekFormat() {\n    return 'dd' // Su Mo Tu We Th Fr Sa\n  }\n\n  getLabelYearFormat() {\n    return 'YYYY'\n  }\n\n  getLabelDateFormat() {\n    return `ddd, MMM D` // Thu, Apr 13\n  }\n\n  formatDaySwitch(date) {\n    return date.format(this.getDaySwitchFormat())\n  }\n\n  formatDayOfWeek(date) {\n    return date.format(this.getDayOfWeekFormat())\n  }\n\n  formatLabelYear(date) {\n    return date.format(this.getLabelYearFormat())\n  }\n\n  formatLabelDate(date) {\n    return date.format(this.getLabelDateFormat())\n  }\n\n  /**\n   *\n   * @param date\n   * @param classNames\n   * @param tooltip\n   * @returns {string}\n   */\n  renderDay(date, classNames, tooltip = '') {\n    return `<td class=\"${classNames.join(' ')}\" ${tooltip} data-${Data.MOMENT}=\"${date}\">${this.renderDayContent(date, classNames)}</td>`\n  }\n\n  /**\n   *\n   * @param date\n   * @param classNames - array - passed to be used as markers only, not to be rendered.  These are rendered in the container\n   * @returns {string}\n   */\n  renderDayContent(date, classNames) { // eslint-disable-line no-unused-vars\n    return date.date()\n  }\n\n  /**\n   *\n   * @param date\n   * @param classNames\n   * @param tooltip\n   * @returns {string}\n   */\n  renderMonth(date, classNames, tooltip = '') {\n    return `<span class=\"${classNames.join(' ')}\" ${tooltip} data-${Data.MOMENT}=\"${date}\">${this.renderMonthContent(date, classNames)}</span>`\n  }\n\n  /**\n   *\n   * @param date\n   * @param classNames\n   * @returns {*}\n   */\n  renderMonthContent(date, classNames) {  // eslint-disable-line no-unused-vars\n    return date.format(`MMM`) // Jan\n  }\n\n  /**\n   *\n   * @param date\n   * @param classNames - array - passed to be used as markers only, not to be rendered.  These are rendered in the container\n   * @returns {string}\n   */\n  renderYearContent(date, classNames) { // eslint-disable-line no-unused-vars\n    return date.year()\n  }\n\n  /**\n   *\n   * @param date\n   * @param classNames\n   * @param tooltip\n   * @returns {string}\n   */\n  renderYear(date, classNames, tooltip = '') {\n    return `<span class=\"${classNames.join(' ')}\" ${tooltip} data-${Data.MOMENT}=\"${date}\">${this.renderYearContent(date, classNames)}</span>`\n  }\n}\n\nexport default BaseTemplate\n","import BaseTemplate from './baseTemplate'\nimport {ClassName} from './../constants'\n\n/**\n * This class registers overridable partials in the {Default} hash constant.  Subclasses can override this\n * {Default} config by passing in any keys as overrides.\n *\n * Interpolation is delayed until #createTemplate is called in order to allow Subclasses to make use of any\n * superclasses' partials.  Tokens are denoted by %% e.g. %header% will be replaced by config.header.\n *\n */\nconst Default = {\n  // keep templates under the markup key so they can be whacked and not included in the general config overrides\n  markup: {\n    arrow: {\n      left: `&laquo;`,\n      right: `&raquo;`\n    }\n  }\n}\n\nconst BS3Template = class extends BaseTemplate {\n\n  constructor(...configs) {\n    super(Default, ...configs)\n  }\n\n  generateView(className) {\n    let html = `<div class=\"${className} ${ClassName.VIEW}\">\n    <table>\n      <thead>\n        <tr>\n          <th colspan=\"7\" class=\"${ClassName.LABEL_TITLE}\"></th>\n        </tr>\n        <tr>\n          <th class=\"${ClassName.PREV}\">%arrow.left%</th>\n          <th colspan=\"5\" class=\"${ClassName.SWITCH}\"></th>\n          <th class=\"${ClassName.NEXT}\">%arrow.right%</th>\n        </tr>\n      </thead>\n      <tbody>`\n\n    if (className !== ClassName.DAYS) {\n      html += `<tr>\n          <td colspan=\"7\"></td>\n        </tr>`\n    }\n\n    html += `\n      </tbody>\n      <tfoot>\n        <tr>\n          <th colspan=\"7\" class=\"${ClassName.TODAY}\"></th>\n        </tr>\n        <tr>\n          <th colspan=\"7\" class=\"${ClassName.CLEAR}\"></th>\n        </tr>\n      </tfoot>\n    </table>\n  </div>`\n\n    return html\n  }\n}\n\nexport default BS3Template\n","import BS3Template from './bs3Template'\n// import {ClassName} from './../constants'\n\n/**\n * Eventually we will probably be rendering different markup...\n *\n */\nconst Default = {}\n\nconst BS4Template = class extends BS3Template {\n\n  constructor(...configs) {\n    super(Default, ...configs)\n  }\n}\n\nexport default BS4Template\n","import BaseTemplate from './baseTemplate'\nimport {ClassName, Data} from './../constants'\n\nconst Default = {\n  // config overrides specific to this template\n  button: {\n    today: true,\n    cancel: true,\n    ok: true\n  },\n  view: {\n    max: 'years', // Set a maximum limit for the view mode\n    disabled: ['months'] // Skip the month view\n  },\n  keyboard: {\n    navigation: false, // disable so that all keys work in the input i.e. back arrow so they can type in a date or use the mouse.\n    touch: false // false will disable keyboard on mobile devices\n  },\n  // keep templates under the markup key so they can be whacked and not included in the general config overrides\n  markup: {\n    arrow: {\n      left: `<i class=\"material-icons left-arrow\">keyboard_arrow_left</i>`,\n      right: `<i class=\"material-icons right-arrow\">keyboard_arrow_right</i>`\n    }\n  }\n}\n\nconst BMD4Template = class extends BaseTemplate {\n  constructor(...configs) {\n    super(Default, ...configs)\n  }\n\n  getDaySwitchFormat() {\n    return `MMMM YYYY` // April 2016\n  }\n\n  /**\n   * Unfortunately moment doesn't have the format we want, so we have to hack it directly\n   * @param date\n   * @returns string\n   */\n  formatDayOfWeek(date) {\n    return super.formatDayOfWeek(date)[0] // S M T W T F S\n  }\n\n  generateView(className) {\n    let html = `<div class=\"card ${className} ${ClassName.VIEW}\">\n      <div class=\"card-header\">\n        <div class=\"card-text ${ClassName.LABEL_YEAR}\"></div>\n        <h2 class=\"card-title ${ClassName.LABEL_DATE}\"></h2>\n      </div>\n    \n      <div class=\"card-block\">\n        <div class=\"card-title\">\n          <button class=\"btn ${ClassName.PREV}\">%arrow.left%</button>\n          <button class=\"btn ${ClassName.SWITCH}\"></button>\n          <button class=\"btn ${ClassName.NEXT}\">%arrow.right%</button>\n        </div>\n    \n    \n        <div class=\"card-text\">\n          <!-- view here -->\n          <table>\n            <thead></thead>\n            <tbody>`\n    if (className !== ClassName.DAYS) {\n      html += `<tr>\n              <td colspan=\"7\"></td>\n            </tr>`\n    }\n    html += `</tbody>\n          </table>\n        </div>\n    \n      </div>\n      <div class=\"card-footer\">\n        <button class=\"btn btn-primary ${ClassName.TODAY}\"></button>\n        <button class=\"btn btn-primary ${ClassName.CLEAR}\"></button>\n        <button class=\"btn btn-primary ${ClassName.CANCEL}\"></button>\n        <button class=\"btn btn-primary ${ClassName.OK}\"></button>\n      </div>\n    </div>`\n\n\n    return html\n  }\n\n  /**\n   *\n   * @param date\n   * @param classNames - array - passed to be used as markers only, not to be rendered.  These are rendered in the container\n   * @returns {string}\n   */\n  renderDayContent(date, classNames) {\n    let classes = ['btn', 'bmd-btn-icon']\n    if (classNames.includes(ClassName.DISABLED)) {\n      classes.push(ClassName.DISABLED)\n    }\n    return `<button type=\"button\" class=\"${classes.join(' ')}\">${date.date()}</button>`\n  }\n\n  renderMonth(date, classNames, tooltip = '') {\n    return `<button type=\"button\" class=\"btn ${classNames.join(' ')}\" ${tooltip} data-${Data.MOMENT}=\"${date}\">${this.renderMonthContent(date, classNames)}</button>`\n  }\n\n  renderYear(date, classNames, tooltip = '') {\n    return `<button type=\"button\" class=\"btn ${classNames.join(' ')}\" ${tooltip} data-${Data.MOMENT}=\"${date}\">${this.renderYearContent(date, classNames)}</button>`\n  }\n}\n\nexport default BMD4Template\n","import BaseTemplate from './baseTemplate'\n\n/**\n * This class registers overridable partials in the {Default} hash constant.  Subclasses can override this\n * {Default} config by passing in any keys as overrides.\n *\n * Interpolation is delayed until #createTemplate is called in order to allow Subclasses to make use of any\n * superclasses' partials.  Tokens are denoted by %% e.g. %header% will be replaced by config.header.\n *\n */\nconst Default = {}\n\nconst BS4Template = class extends BaseTemplate {\n\n  constructor(stringTemplate) {\n    super(Default)\n    this.stringTemplate = stringTemplate\n  }\n\n  getTemplate() {\n    return this.stringTemplate\n  }\n}\n\nexport default BS4Template\n","import BS3Template from './templates/bs4Template'\nimport BS4Template from './templates/bs4Template'\nimport BMD4Template from './templates/bmd4Template'\nimport StringTemplate from './templates/stringTemplate'\nimport extend from 'extend'\n\n/**\n * A preset can override any {Default} from the {Datepicker}.  User configs are ultimately the winner if there\n * is any conflict in the deep merge.\n */\nconst Preset = class {\n  static resolveTemplateConfig(config) {\n    let p = config.preset.toLowerCase()\n    let value\n    switch (p) {\n      case 'bs3':\n      {\n        value = {\n          template: new BS3Template()\n        }\n        break\n      }\n      case 'bs4':\n      {\n        value = {\n          template: new BS4Template()\n        }\n        break\n      }\n      case 'bmd4':\n      {\n        value = {\n          template: new BMD4Template()\n        }\n        break\n      }\n      case 'custom':\n      { // custom can pass a class or a string\n        if (typeof config.template === 'string') {\n          value = {\n            template: new StringTemplate(config.template)\n          }\n        }\n        else {\n          value = {} // nothing, assume they passed a class (no change necessary) and know what they are doing\n        }\n        break\n      }\n      default:\n        throw new Error(`Unknown 'preset' '${config.preset}'. Try one of: bs3 | bs4 | bmd4 | custom`)\n    }\n    return value\n  }\n\n  /**\n   * Helper to quickly resolve the config from preset based on the presetType\n   *\n   * @param preset\n   * @param userConfigs - ordered set of overrides\n   * @returns {source, watch, dest}\n   */\n  static resolve(...userConfigs) {\n    // default preset is bs4\n    let userConfig = extend(true, {preset: `bs4`}, ...userConfigs)\n\n    let templateConfig = this.resolveTemplateConfig(userConfig)\n    let template = templateConfig.template\n\n    // get a copy of the template config\n    let templateOverrides = extend(true, {}, template.config)\n    // whack the markup key so that we don't include giant templates in our config\n    templateOverrides.markup = undefined\n\n    // Template (object) config overrides userConfig - it converts config to a Template class.\n    // We also gather any Template config and add it, but any userConfig can override it.\n    let resolved = extend(true, {}, templateOverrides, userConfig, templateConfig)\n\n    if (!resolved.template) {\n      throw new Error(`'template' must be either a Template class or a String`)\n    }\n\n    //console.log(`resolved config with preset: \\n${stringify(resolved)}`)\n    return resolved\n  }\n}\n\nexport default Preset\n","import Base from './base'\nimport {Selector, ClassName, Unit, View, Visibility, Data} from './constants'\n\nconst Renderer = class extends Base {\n\n  constructor(datepicker) {\n    super()\n    this.dp = datepicker\n    this.config = this.dp.config // shortcut reference to same config\n    this.$picker = $(this.config.template.interpolate())\n\n    if (this.dp.isInline) {\n      this.$picker.addClass(ClassName.INLINE).appendTo(this.dp.$element)\n    }\n\n    if (this.config.rtl) {\n      this.$picker.addClass(ClassName.RTL)\n    }\n\n    this.renderDaysViewDOW()\n    this.renderButtons()\n  }\n\n  dispose() {\n    this.$picker.remove()\n    this.$picker = undefined\n    this.dp = undefined\n    super.dispose()\n  }\n\n  /**\n   * Show a specific view by id.\n   * @param viewId\n   */\n  showView(viewId) {\n    this.$picker\n      .children('div')\n      .hide()\n      .filter(`.${this.config.view.modes[viewId].cssClass}`) // days|months|years|decades|centuries\n      .show()\n    this.updateNavArrows()\n  }\n\n  render() {\n    let viewDate = this.dp.viewDate.clone().local()\n    // title text\n    this.$picker.find(`${Selector.LABEL_TITLE}`).text(this.config.title).toggle(this.config.label.title !== undefined)\n    this.$picker.find(`${Selector.LABEL_YEAR}`).text(this.config.template.formatLabelYear(viewDate))\n    this.$picker.find(`${Selector.LABEL_DATE}`).text(this.config.template.formatLabelDate(viewDate))\n\n    this.updateNavArrows(viewDate)\n    this.renderMonthsView(viewDate)\n    this.renderDaysView(viewDate)\n\n    // Generate the years/decades/centuries\n    let year = viewDate.year()\n    let startYear = this.config.date.start.year()\n    let endYear = this.config.date.end.year()\n\n    // Generating years picker\n    this.renderYearsView(\n      Selector.YEARS,\n      Unit.YEAR,\n      10,\n      1,\n      year,\n      startYear,\n      endYear,\n      this.config.beforeShowYear\n    )\n\n    // Generating decades picker\n    this.renderYearsView(\n      Selector.DECADES,\n      Unit.DECADE,\n      100,\n      10,\n      year,\n      startYear,\n      endYear,\n      this.config.beforeShowDecade\n    )\n\n    // Generating centuries picker\n    this.renderYearsView(\n      Selector.CENTURIES,\n      Unit.CENTURY,\n      1000,\n      100,\n      year,\n      startYear,\n      endYear,\n      this.config.beforeShowCentury\n    )\n  }\n\n  // ------------------------------------------------------------------------\n  // private\n\n  updateNavArrows(viewDate) {\n    if (!this.allowUpdate)\n      return\n\n    let year = viewDate.year()\n    let month = viewDate.month()\n    let $prev = this.$picker.find(Selector.PREV)\n    let $next = this.$picker.find(Selector.NEXT)\n\n    switch (this.dp.viewMode) {\n      case View.DAYS:\n        if (year <= this.config.date.start.year() && month <= this.config.date.start.month()) {\n          $prev.css(Visibility.HIDDEN)\n        }\n        else {\n          $prev.css(Visibility.VISIBLE)\n        }\n        if (year >= this.config.date.end.year() && month >= this.config.date.end.month()) {\n          $next.css(Visibility.HIDDEN)\n        }\n        else {\n          $next.css(Visibility.VISIBLE)\n        }\n        break\n      case View.MONTHS:\n      case View.YEARS:\n      case View.DECADES:\n      case View.CENTURIES:\n        if (year <= this.config.date.start.year() || this.config.view.max < View.YEARS) {\n          $prev.css(Visibility.HIDDEN)\n        }\n        else {\n          $prev.css(Visibility.VISIBLE)\n        }\n        if (year >= this.config.date.end.year() || this.config.view.max < View.YEARS) {\n          $next.css(Visibility.HIDDEN)\n        }\n        else {\n          $next.css(Visibility.VISIBLE)\n        }\n        break\n    }\n  }\n\n  renderDaysViewDOW() {\n    let dowCnt = this.config.week.start\n    let html = '<tr>'\n    while (dowCnt < this.config.week.start + 7) {\n      let disabledClass = ($.inArray(dowCnt, this.config.daysOfWeek.disabled) > -1) ? ClassName.DISABLED : ''\n      let date = this.dp.newMoment().day((dowCnt++) % 7)\n      html += `<th class=\"${ClassName.DOW} ${disabledClass}\">${this.config.template.formatDayOfWeek(date)}</th>`\n    }\n    html += '</tr>'\n    this.$picker.find(`${Selector.DAYS} thead`).append(html)\n  }\n\n  renderButtons() {\n    // today button text\n    this.$picker.find(Selector.TODAY).text(this.i18n('today')).toggle(this.config.button.today !== false)\n    // clear button text\n    this.$picker.find(Selector.CLEAR).text(this.i18n('clear')).toggle(this.config.button.clear !== false)\n    // cancel button\n    this.$picker.find(Selector.CANCEL).text(this.i18n('cancel')).toggle(this.config.button.cancel !== false)\n    // ok button\n    this.$picker.find(Selector.OK).text(this.i18n('ok')).toggle(this.config.button.ok !== false)\n  }\n\n  renderDaysView(viewDate) {\n    // get prevMonth moment set to same day of the week\n    let viewFirstDay = viewDate.clone().startOf(Unit.MONTH).startOf(Unit.WEEK)\n    viewFirstDay.day(viewFirstDay.day() - (viewFirstDay.day() - this.config.week.start + 7) % 7) // set day of week\n\n    let viewLastDay = viewDate.clone().endOf(Unit.MONTH).endOf(Unit.WEEK)\n\n    let html = []\n    while (viewFirstDay.isBefore(viewLastDay)) {\n      this.renderDay(viewDate, viewFirstDay, html)\n      viewFirstDay.add(1, 'days')\n    }\n\n    let $view = this.$picker.find(`${Selector.DAYS}`)\n\n    // attach new days content\n    $view.find(`tbody`).empty().append(html.join(''))\n\n    // render switch text e.g. Thu, Apr 13\n    $view.find(`${Selector.SWITCH}`).text(this.config.template.formatDaySwitch(viewDate))\n  }\n\n  renderDay(viewDate, date, html) {\n    let before = null\n    let tooltip = ''\n    if (date.day() === this.config.week.start) {\n      html.push('<tr>')\n    }\n    let classNames = this.getDayClassNames(viewDate, date)\n    classNames.push(Unit.DAY)\n    // this.config.template.addDayClasses(date, classNames)\n\n    /*\n     A function that takes a date as a parameter and returns one of the following values:\n\n     - undefined to have no effect\n     - An object with the following properties:\n     disabled: A Boolean, indicating whether or not this date is disabled\n     classes: A String representing additional CSS classes to apply to the date’s cell\n     tooltip: A tooltip to apply to this date, via the title HTML attribute\n     */\n    if (this.config.beforeShowDay !== undefined) {\n      before = this.config.beforeShowDay(date)\n      if (before === undefined) {\n        before = {}\n      }\n      if (before.disabled === true) {\n        classNames.push(ClassName.DISABLED)\n      }\n      if (before.classes) {\n        classNames = classNames.concat(before.classes.split(/\\s+/))\n      }\n      if (before.tooltip) {\n        tooltip = before.tooltip ? ` title=\"${before.tooltip}\"` : ''\n      }\n    }\n\n    classNames = $.unique(classNames)\n    html.push(this.config.template.renderDay(date, classNames, tooltip))\n    if (date.day() === this.config.week.end) {\n      html.push('</tr>')\n    }\n  }\n\n  renderMonthsView(viewDate) {\n    let $view = this.$picker.find(Selector.MONTHS)\n    let year = viewDate.year()\n    let startYear = this.config.date.start.year()\n    let startMonth = this.config.date.start.month()\n    let endYear = this.config.date.end.year()\n    let endMonth = this.config.date.end.month()\n    let html = ''\n\n    for (let i = 0; i < 12; i++) { // 0..11\n      let classNames = [Unit.MONTH]\n      if (viewDate && viewDate.month() === i) classNames.push(ClassName.FOCUSED)\n\n      let date = this.dp.newMoment().month(i).startOf('month')\n      html += this.config.template.renderMonth(date, classNames)\n    }\n\n    $view.find(`td`).html(html)\n    $view.find(Selector.SWITCH).text(year)\n    let $months = $view.find(Selector.MONTH)\n\n    for (let d of this.dp.dates.array) {\n      if (d.year() === year) {\n        $months.eq(d.month()).addClass(ClassName.ACTIVE)\n      }\n    }\n\n    if (year < startYear || year > endYear) {\n      $months.addClass(ClassName.DISABLED)\n    }\n    if (year === startYear) {\n      $months.slice(0, startMonth).addClass(ClassName.DISABLED)\n    }\n    if (year === endYear) {\n      $months.slice(endMonth + 1).addClass(ClassName.DISABLED)\n    }\n\n\n    /*\n     A function that takes a date as a parameter and returns one of the following values:\n\n     - undefined to have no effect\n     - An object with the following properties:\n     disabled: A Boolean, indicating whether or not this date is disabled\n     classes: A String representing additional CSS classes to apply to the date’s cell\n     tooltip: A tooltip to apply to this date, via the title HTML attribute\n     */\n    if (this.config.beforeShowMonth !== undefined) {\n      for (let month of $months) {\n        let $month = $(month)\n        let m = this.dp.newMoment($month.data(Data.MOMENT))\n        let before = this.config.beforeShowMonth(m)\n        if (before === undefined) {\n          before = {}\n        }\n        if (before.disabled === true) {\n          $month.addClass(ClassName.DISABLED)\n        }\n        if (before.classes) {\n          $month.addClass(before.classes)\n        }\n        if (before.tooltip) {\n          $month.prop('title', before.tooltip)\n        }\n      }\n    }\n  }\n\n  renderYearsView(selector, cssClass, factor, step, currentYear, startYear, endYear, callback) {\n    let html = ''\n    let $view = this.$picker.find(selector)\n    let currentYearFactored = parseInt(currentYear / factor, 10) * factor\n    let startStep = parseInt(startYear / step, 10) * step\n    let endStep = parseInt(endYear / step, 10) * step\n    let steps = $.map(this.dp.dates.array, function (d) {\n      return parseInt(d.year() / step, 10) * step\n    })\n\n    $view.find(Selector.SWITCH).text(`${currentYearFactored}-${currentYearFactored + step * 9}`)\n\n    let year = currentYearFactored - step\n    for (let i = -1; i < 11; i += 1) {\n      let classNames = [cssClass]\n\n      if (i === -1) {\n        classNames.push(ClassName.OLD)\n      }\n      else if (i === 10) {\n        classNames.push(ClassName.NEW)\n      }\n      if ($.inArray(year, steps) !== -1) {\n        classNames.push(ClassName.ACTIVE)\n      }\n      if (year < startStep || year > endStep) {\n        classNames.push(ClassName.DISABLED)\n      }\n      if (year === this.dp.viewDate.year()) {\n        classNames.push(ClassName.FOCUSED)\n      }\n\n      /*\n       A function that takes a date as a parameter and returns one of the following values:\n\n       - undefined to have no effect\n       - An object with the following properties:\n       disabled: A Boolean, indicating whether or not this date is disabled\n       classes: A String representing additional CSS classes to apply to the date’s cell\n       tooltip: A tooltip to apply to this date, via the title HTML attribute\n       */\n      let tooltip = ``\n      let m = this.dp.newMoment().year(year).startOf(Unit.YEAR)\n      if (callback !== undefined) {\n        let before = callback(m)\n\n        if (before === undefined) {\n          before = {}\n        }\n        if (before.disabled === true) {\n          classNames.push(ClassName.DISABLED)\n        }\n        if (before.classes) {\n          classNames = classNames.concat(before.classes.split(/\\s+/))\n        }\n        if (before.tooltip) {\n          tooltip = before.tooltip ? `title=\"${before.tooltip}\"` : ''\n        }\n      }\n\n      html += this.config.template.renderYear(m, classNames, tooltip)\n      year += step\n    }\n    $view.find('td').html(html)\n  }\n\n  getDayClassNames(viewDate, date) {\n    let classes = []\n    let viewYear = viewDate.year()\n    let viewMonth = viewDate.month()\n    let year = date.year()\n    let month = date.month()\n    let today = this.dp.newMoment().local()\n\n    if (year < viewYear || (year === viewYear && month < viewMonth)) {\n      classes.push(ClassName.OLD)\n    }\n    else if (year > viewYear || (year === viewYear && month > viewMonth)) {\n      classes.push(ClassName.NEW)\n    }\n    if (this.dp.viewDate && date.isSame(this.dp.viewDate, 'day')) {\n      classes.push(ClassName.FOCUSED)\n    }\n    // Compare internal UTC date with local today, not UTC today\n    if (date.isSame(today, 'date')) {\n      classes.push(ClassName.TODAY)\n    }\n    if (this.dp.dates.contains(date) !== -1) {\n      classes.push(ClassName.ACTIVE)\n    }\n    if (!this.dp.boundedDate(date) || this.dp.dateIsDisabled(date)) {\n      classes.push(ClassName.DISABLED)\n    }\n    if (this.dp.shouldBeHighlighted(date)) {\n      classes.push(ClassName.HIGHLIGHTED)\n    }\n\n    // uses moment-range\n    let range = this.dp.range\n    if (range) {\n      if (range.contains(date)) {\n        classes.push(ClassName.RANGE)\n      }\n      if (range.start.isSame(date) || range.end.isSame(date)) {\n        classes.push(ClassName.SELECTED)\n      }\n      if (range.start.isSame(date)) {\n        classes.push(ClassName.RANGE_START)\n      }\n      if (range.end.isSame(date)) {\n        classes.push(ClassName.RANGE_END)\n      }\n    }\n    return classes\n  }\n}\n\nexport default Renderer\n","import Base from './base'\nimport {Selector, ClassName, Unit, View, Event, Data} from './constants'\nimport {Keycodes, Key} from 'key.js'\n\nconst EventManager = class extends Base {\n\n  constructor(datepicker) {\n    super()\n    this.dp = datepicker\n    this.renderer = this.dp.renderer\n    this.config = this.dp.config // shortcut reference to same config\n    this.$document = $(document)\n\n    // Element events\n    this.elementEvents = {\n      keyup: (ev) => this.onKeyup(ev),\n      keydown: (ev) => this.onKeydown(ev),\n      paste: (ev) => this.onPaste(ev),\n      click: () => this.dp.show()\n    }\n\n    // on element focus show\n    if (this.config.showOnFocus === true) {\n      this.elementEvents.focus = () => this.dp.show()\n    }\n\n    // Picker events\n    this.pickerEvents = {\n      // FIXME: these need to be added for keyboard nav after initial click (initial attempt didn't work - needs debugging).  It seems like these need to be on the document to catch the event such as esc after a mouse click\n      //keyup: (ev) => this.onKeyup(ev),\n      //keydown: (ev) => this.onKeydown(ev),\n      click: (ev) => this.onPickerClick(ev)\n    }\n\n    this.pickerDocumntEvents = {\n      mousedown: (ev) => this.onMousedown(ev)\n    }\n\n    // Initial attachment of events on element (input) - only removed on dispose\n    this.attachElementEvents()\n  }\n\n  dispose() {\n    this.detachElementEvents()\n    this.detachPickerEvents()\n    this.dp = undefined\n    this.renderer = undefined\n    this.elementEvents = undefined\n    this.pickerEvents = undefined\n    this.$document = undefined\n    super.dispose()\n  }\n\n  attachElementEvents() {\n    this.attachEvents(this.dp.$input, this.elementEvents) // FIXME: should be $element?\n  }\n\n  detachElementEvents() {\n    this.detachEvents(this.dp.$input, this.elementEvents)\n  }\n\n  attachPickerEvents() {\n    this.attachEvents(this.renderer.$picker, this.pickerEvents)\n    this.attachEvents(this.$document, this.pickerDocumntEvents)\n  }\n\n  detachPickerEvents() {\n    this.detachEvents(this.renderer.$picker, this.pickerEvents)\n    this.detachEvents(this.$document, this.pickerDocumntEvents)\n  }\n\n  onShown() {\n    this.attachPickerEvents()\n    this.trigger(Event.SHOW)\n    if ((window.navigator.msMaxTouchPoints || 'ontouchstart' in document) && !this.config.keyboard.touch) {\n      this.dp.$element.blur()\n    }\n  }\n\n  onHidden() {\n    this.lastKeyboardFocusDate = null\n    this.detachPickerEvents()\n    this.trigger(Event.HIDE)\n  }\n\n  onMousedown(ev) {\n    // if clicked outside the datepicker, hide it\n    if (!(\n        this.dp.$element.is(ev.target) ||\n        this.dp.$element.find(ev.target).length ||\n        this.renderer.$picker.is(ev.target) ||\n        this.renderer.$picker.find(ev.target).length ||\n        this.renderer.$picker.hasClass(ClassName.INLINE)\n      )) {\n      this.dp.hide()\n    }\n  }\n\n  popView(ev) {\n    this.dp.changeView(-1)\n    ev.preventDefault()\n    ev.stopPropagation()\n  }\n\n  onPickerClick(ev) {\n    ev.preventDefault()\n    ev.stopPropagation()\n\n    // if mouse is used - clear out any old state from keyboard navigation\n    this.lastKeyboardFocusDate = null\n\n    let $target = $(ev.target)\n    let $navArrow = $target.closest(`${Selector.PREV}, ${Selector.NEXT}`)\n\n    // --------------------------\n    // Clicked on the switch\n    if ($target.hasClass(ClassName.SWITCH)) {\n      this.dp.changeView(1)\n    }\n    // --------------------------\n    // Clicked on the cancel\n    else if ($target.hasClass(ClassName.CANCEL)) {\n      this.popView(ev)\n    }\n    // --------------------------\n    // Clicked on the ok\n    else if ($target.hasClass(ClassName.OK)) {\n      this.acceptDate(ev)\n      this.dp.hide()\n    }\n    // --------------------------\n    // Clicked on prev or next\n    else if ($navArrow.length > 0) {\n      let direction = this.config.view.modes[this.dp.view].navStep * ($navArrow.hasClass(ClassName.PREV) ? -1 : 1)\n      let unit\n      if (this.dp.view === View.DAYS) {\n        unit = Unit.MONTH\n      }\n      else {\n        unit = Unit.YEAR\n      }\n\n      this.dp.viewDate.add(direction, unit)\n      this.trigger(Event[`${unit.toUpperCase()}_CHANGE`])\n\n      // set view date but don't select it using one of the #update methods\n      this.renderer.render()\n    }\n    // --------------------------\n    // Clicked on today button\n    else if ($target.hasClass(ClassName.TODAY)) {\n      this.dp.showView(View.DAYS)\n      this.dp.update(this.dp.newMoment())\n    }\n    // --------------------------\n    // Clicked on clear button\n    else if ($target.hasClass(ClassName.CLEAR)) {\n      this.dp.clearDates()\n    }\n    else {\n      // Getting here means it was not a button\n\n      // Target may be markup inside the td, find the one with the data-moment\n      while ($target != null && $target[0].localName != 'body' && !$target.data(Data.MOMENT)) {\n        $target = $target.parent()\n      }\n\n      if (!$target.hasClass(ClassName.DISABLED)) {\n\n        // --------------------------\n        // Clicked on a day\n        if ($target.hasClass(Unit.DAY)) {\n          let origViewDate = this.dp.viewDate.clone()\n          let m = this.dp.newMoment($target.data(Data.MOMENT))\n          this.dp.updateMultidateOrToggle(m)\n          if (origViewDate.year() != m.year()) {\n            this.trigger(Event.YEAR_CHANGE, m)\n          }\n          if (origViewDate.month() != m.month()) {\n            this.trigger(Event.MONTH_CHANGE, m)\n          }\n        }\n        // --------------------------\n        // Clicked on a month\n        if ($target.hasClass(Unit.MONTH)) {\n          let month = $target.parent().find('span').index($target)\n          this.dp.updateMultidateOrToggle(this.dp.viewDate.clone().month(month))\n          this.trigger(Event.MONTH_CHANGE)\n          if (this.config.view.min === View.MONTHS) {\n            this.dp.showView()\n          }\n          else {\n            this.dp.showView(View.DAYS)\n          }\n        }\n        // --------------------------\n        // Clicked on a year|decade|century\n        if ($target.hasClass(Unit.YEAR)\n          || $target.hasClass(Unit.DECADE)\n          || $target.hasClass(Unit.CENTURY)) {\n\n          let year = parseInt($target.text(), 10) || 0\n          let unit\n          if ($target.hasClass(Unit.YEAR)) {\n            unit = Unit.YEAR\n          }\n          if ($target.hasClass(Unit.DECADE)) {\n            unit = Unit.DECADE\n          }\n          if ($target.hasClass(Unit.CENTURY)) {\n            unit = Unit.CENTURY\n          }\n\n          this.dp.updateMultidateOrToggle(this.dp.viewDate.clone().year(year))\n          if (unit) {\n            this.trigger(Event[`${unit.toUpperCase()}_CHANGE`])\n          }\n          this.dp.changeView(-1)\n        }\n      }\n    }\n  }\n\n  onKeyup(ev) {\n    if (Key.isNot(ev,\n        Keycodes.ESC,\n        Keycodes.LEFT,\n        Keycodes.RIGHT,\n        Keycodes.UP,\n        Keycodes.DOWN,\n        Keycodes.SPACE,\n        Keycodes.ENTER,\n        Keycodes.TAB))\n\n    // This is called when someone is typing into the field, therefore try to send the value to update\n    //  but do so without erroring in case parse is bad.\n      try {\n        this.dp.update()\n      }\n      catch (error) { // eslint-disable-line no-empty\n      }\n  }\n\n  onKeydown(ev) {\n    if (!this.dp.isShowing()) {\n      if (Key.is(ev, Keycodes.DOWN, Keycodes.ESC)) { // allow down to re-show picker\n        this.dp.show()\n        ev.stopPropagation()\n      }\n      return\n    }\n\n    switch (Key.toCode(ev)) {\n      case Keycodes.ESC:\n        this.popView(ev)\n        break\n      case Keycodes.ENTER:\n      case Keycodes.TAB:\n        this.acceptDate(ev)\n\n        if (Key.is(ev, Keycodes.TAB)) {\n          this.dp.hide()\n        }\n        break\n      case Keycodes.LEFT:\n      case Keycodes.UP:\n      case Keycodes.RIGHT:\n      case Keycodes.DOWN:\n      {\n        let focusDate = this.lastKeyboardFocusDate || this.dp.dates.last() || this.dp.viewDate\n        if (!this.config.keyboard.navigation || this.config.daysOfWeek.disabled.length === 7) {\n          break\n        }\n        let direction = Key.is(ev, Keycodes.LEFT, Keycodes.UP) ? -1 : 1\n        let unit\n        if (this.dp.view === View.DAYS) {\n          if (ev.ctrlKey) {\n            unit = Unit.YEAR\n          }\n          else if (ev.shiftKey) {\n            unit = Unit.MONTH\n          }\n          else if (Key.is(ev, Keycodes.LEFT, Keycodes.RIGHT)) {\n            unit = Unit.DAY\n          }\n          else if (!this.dp.weekOfDateIsDisabled(focusDate)) {\n            unit = Unit.WEEK\n          }\n        }\n        else if (this.dp.view === View.MONTHS) {\n          if (Key.is(ev, Keycodes.UP, Keycodes.DOWN)) {\n            direction = direction * 4\n          }\n          unit = Unit.MONTH\n        }\n        else if (this.dp.view === View.YEARS) {\n          if (Key.is(ev, Keycodes.UP, Keycodes.DOWN)) {\n            direction = direction * 4\n          }\n          unit = Unit.YEAR\n        }\n\n        // now move the available date and render (highlight the moved date)\n        if (unit) {\n          this.lastKeyboardFocusDate = this.dp.viewDate = this.dp.moveAvailableDate(focusDate, direction, unit)\n          this.renderer.render()\n\n          this.trigger(Event[`${unit.toUpperCase()}_CHANGE`])\n          ev.preventDefault()\n        }\n        break\n      }\n    }\n  }\n\n  acceptDate(ev) {\n    this.dp.updateMultidateOrToggle(this.lastKeyboardFocusDate || this.dp.dates.last() || this.dp.viewDate)\n    ev.preventDefault()\n    ev.stopPropagation()\n  }\n\n  onPaste(ev) {\n    let dateString = null\n    if (ev.originalEvent.clipboardData && ev.originalEvent.clipboardData.types\n      && $.inArray('text/plain', ev.originalEvent.clipboardData.types) !== -1) {\n      dateString = ev.originalEvent.clipboardData.getData('text/plain')\n    }\n    else if (window.clipboardData) {\n      dateString = window.clipboardData.getData('Text')\n    }\n    else {\n      return\n    }\n    this.dp.setDate(dateString)\n    ev.preventDefault()\n  }\n\n  trigger(event) {\n    //let date = this.dp.dates.last()\n    //if (date) {\n    //  //clone it if present\n    //  date = date.clone()\n    //}\n\n    this.fire(event, {\n      type: event,\n      //date: date,\n      datepicker: this.dp\n    })\n  }\n\n  /**\n   *\n   * @param eventKey\n   * @param object/hash - properties will be set on event\n   * @returns {boolean} - if false, code should get out because handler prevented\n   */\n  fire(eventKey, object = {}) {\n    let event = $.Event(eventKey, object)\n    this.debug(`fire: ${eventKey}`, object)\n    this.dp.$element.trigger(event)\n    if (event.isDefaultPrevented()) {\n      this.debug(`default prevented on ${eventKey}`)\n      return false\n    }\n    else {\n      return true\n    }\n  }\n\n  attachEvents(element, hash) {\n    for (let key of Object.keys(hash)) {\n      let value = hash[key]\n      element.on(key, value)\n    }\n  }\n\n  detachEvents(element, hash) {\n    for (let key of Object.keys(hash)) {\n      let value = hash[key]\n      element.off(key, value)\n    }\n  }\n}\n\nexport default EventManager\n","/**\n * Helper converted from legacy code, not sure we need to keep it but for ease of conversion of the entire\n *  codebase, I've kept it.  TODO: Revisit this later to see if we actually need it.\n *  FIXME: if we keep this after refactoring, we _have_ to rename it.\n */\nconst DateArray = class {\n  constructor(...moments) {\n    this.array = [].concat(moments)\n  }\n\n  last() {\n    // return the last date in the array (go backwards 1 index)\n    return this.get(-1)\n  }\n\n  length() {\n    return this.array.length\n  }\n\n  push(m) {\n    this.array.push(m)\n  }\n\n  get(i) {\n    return this.array.slice(i)[0]\n  }\n\n  /**\n   * Compares at the granularity of\n   * @param other\n   * @param granularity - default 'date' (not specific to hours/minutes/seconds)\n   * @returns {*}\n   */\n  contains(other, granularity = 'date') {\n    for (let i in this.array) {\n      let m = this.array[i]\n      if (m.isSame(other, granularity)) {\n        return i\n      }\n    }\n\n    return -1\n  }\n\n  /**\n   * Requires the same number and order of dates, then does a deep compare given the format\n   * @param otherDateArray\n   * @returns {boolean}\n   */\n  isSame(otherDateArray) {\n    if (!otherDateArray) {\n      return false\n    }\n\n    if (this.length() !== otherDateArray.length()) {\n      return false\n    }\n\n    for (let i in this.array) {\n      let a = this.array[i]\n      let b = otherDateArray.array[i]\n\n      if (!a.isSame(b)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  remove(i) {\n    this.array.splice(i, 1)\n  }\n\n  clear() {\n    this.array = []\n  }\n\n  copy() {\n    return new DateArray(...this.array)\n  }\n\n  clonedArray() {\n    let clones = []\n    for (let m of this.array) {\n      clones.push(m.clone())\n    }\n\n    return clones\n  }\n\n  /**\n   *\n   * @param format - any momentjs format - default null will yield \"2014-09-08T08:02:17-05:00\" (ISO 8601)\n   * @returns {Array}\n   */\n  formattedArray(format = null) {\n    let formatted = []\n    for (let m of this.array) {\n      formatted.push(m.local().format(format))  // needs to be local as it is displayed or put into the input\n    }\n    return formatted\n  }\n}\n\nexport default DateArray\n","import moment from 'moment'\nimport 'moment-range'\n\nconst Moments = class {\n\n  static toRange(...moments) {\n    if (!moments || moments.length < 2) {\n      throw new Error(`Expected at least two moments but found only ${moments}`)\n    }\n\n    return moment.range(Moments.earliest(...moments), Moments.latest(...moments))\n  }\n\n  static earliest(...moments) {\n    return this._comparison('isSameOrBefore', ...moments)\n  }\n\n  static latest(...moments) {\n    return this._comparison('isSameOrAfter', ...moments)\n  }\n\n  static _comparison(fn, ...moments) {\n    let result = null\n    for (let m of moments) {\n      if (result == null) {\n        result = m\n      }\n      else {\n        if (m[fn](result)) {\n          result = m\n        }\n      }\n    }\n\n    return result\n  }\n}\n\nexport default Moments\n","import Base from './base'\nimport Datepicker from './datepicker'\nimport Moments from './util/moments'\nimport {Data, Event} from './constants'\n\n// FIXME: ENCAPSULATION - currently, the Datepicker jquery fn instantiates this, then this instantiates that.  So strange.\n\nconst DateRangePicker = class extends Base {\n\n  constructor($element, config) {\n    super($element, config)\n\n    // create a config sans inputs\n    let _config = $.extend({}, this.config, {inputs: undefined}) // don't pass along inputs to dp\n\n    // for each input, instantiate it\n    this.inputs = []\n    this.datepickers = []\n    for (let i of this.config.inputs) {\n\n      // track all inputs\n      let $input = $(i)\n      this.inputs.push($input)\n\n      // instantiate each datepicker\n      Datepicker._jQueryInterface.call($input, _config)\n        .on(Event.DATE_CHANGE, (ev) => this.dateUpdated(ev))\n\n      // track all datepickers\n      this.datepickers.push($input.data(Data.KEY))\n    }\n\n    this.updateRange()\n  }\n\n  updateRange() {\n    // gather all dates\n    this.dates = []\n    for (let dp of this.datepickers) {\n      this.dates.push(dp.getDate())\n    }\n\n    // create a range from all dates\n    this.range = Moments.toRange(...this.dates)\n\n    // let the datepickers know what range we are working with\n    for (let dp of this.datepickers) {\n      dp.setRange(this.range)\n    }\n  }\n\n  dateUpdated(ev) {\n    // `this.updating` is a workaround for preventing infinite recursion between Event.DATE_CHANGE triggering\n    //    and calls to `setDate`.  Until there is a better mechanism.\n    if (this.updating) {\n      return\n    }\n\n    this.updating = true\n\n    try {\n      let datepicker = $(ev.target).data(Data.KEY)\n      if (typeof(datepicker) === \"undefined\") {\n        return\n      }\n\n      if (!this.inputs.is(ev.target)) {\n        // not our input\n        return\n      }\n\n      // TODO: it appears we can have more than two datepickers, I'm not sure of the use-case, but it would seem to make more sense  with just two (and be simpler).\n      let newDate = datepicker.getDate()\n      let index = $.inArray(ev.target, this.inputs)\n      let indexBefore = index - 1\n      let indexAfter = index + 1\n      let length = this.inputs.length\n\n      for (let dp of this.datepickers) {\n        if (!dp.getDate())\n          dp.setDate(newDate)\n      }\n\n      if (newDate.isBefore(this.dates.array[indexBefore])) {\n        // Date being moved earlier/left\n        while (indexBefore >= 0 && newDate.isBefore(this.dates.array[indexBefore])) {\n          this.datepickers[indexBefore--].setDate(newDate)\n        }\n      }\n      else if (newDate.isAfter(this.dates.array[indexAfter])) {\n        // Date being moved later/right\n        while (indexAfter < length && newDate.isAfter(this.dates.array[indexAfter])) {\n          this.datepickers[indexAfter++].setDate(newDate)\n        }\n      }\n      this.updateRange()\n    }\n    finally {\n      this.updating = undefined\n    }\n  }\n\n  dispose() {\n    for (let dp of this.datepickers) {\n      dp.dispose()\n    }\n\n    this.dates = null\n    this.range = null\n    this.inputs = null\n    this.datepickers = null\n  }\n}\n\nexport default DateRangePicker\n","import Base from './base'\nimport Preset from './preset'\nimport Renderer from './renderer'\nimport EventManager from './eventManager'\nimport DateArray from './util/dateArray'\nimport DateRangePicker from './dateRangePicker'\nimport {JQUERY_NAME, Data, Event, Selector, ClassName, Unit, View} from './constants'\nimport Popper from 'popper.js'\nimport moment from 'moment'\nimport extend from 'extend'\n\n\n/**\n * Datepicker for fields using momentjs for all date-based functionality.\n *\n * Internal dates are stored as UTC moments.  To use them in local time, execute moment.local() prior to formatting.\n */\nconst Datepicker = (($) => {\n\n  const JQUERY_NO_CONFLICT = $.fn[JQUERY_NAME]\n  const Default = {\n    // lang defaults to en, most i18n comes from moment's locales.\n    lang: 'en',\n    // i18n - for the very few strings we use.\n    i18n: {\n      en: {\n        today: 'Today',\n        clear: 'Clear',\n        cancel: 'Cancel',\n        ok: 'Ok'\n      }\n    },\n    button: {\n      today: false, // If true, displays a “Today” button at the bottom of the datepicker to select the current date\n      clear: false,\n      cancel: false,\n      ok: false\n    },\n    autoclose: false, // Whether or not to close the datepicker immediately when a date is selected\n    keyboard: {\n      navigation: true, // allow date navigation by arrow keys\n      touch: true // false will disable keyboard on mobile devices\n    },\n    rtl: false,\n    enableOnReadonly: true, // If false the datepicker will not show on a readonly datepicker field\n    showOnFocus: true, // If false, the datepicker will be prevented from showing when the input field associated with it receives focus\n    label: {\n      title: undefined // string that will appear on top of the datepicker. Some templates do not have a position for title.\n    },\n\n    //-----------------\n    // view types:\n    //    days | months | years | decades | centuries\n    view: {\n      start: 'days', // The view that the datepicker should show when it is opened\n      min: 'days', // Set a minimum limit for the view mode\n      max: 'centuries', // Set a maximum limit for the view mode\n      disabled: [], // Any view disabled will be skipped on #changeView\n      modes: [\n        {\n          cssClass: ClassName.DAYS,\n          navStep: 1\n        },\n        {\n          cssClass: ClassName.MONTHS,\n          navStep: 1\n        },\n        {\n          cssClass: ClassName.YEARS,\n          navStep: 10\n        },\n        {\n          cssClass: ClassName.DECADES,\n          navStep: 100\n        },\n        {\n          cssClass: ClassName.CENTURIES,\n          navStep: 1000\n        }]\n    },\n\n    week: {\n      start: 0 // Day of the week start. 0 (Sunday) to 6 (Saturday)\n      // end is calculated based on start\n    },\n    // format: // pass in a momentjs compatible format, or it will default to L based on locale\n    date: {\n      //start: default: beginning of time - The earliest date that may be selected all earlier dates will be disabled.\n      //end:  default: end of time - The latest date that may be selected all later dates will be disabled\n      disabled: [], // Single or Array of disabled dates - can be string or moment\n      //'default': // default is today - can be a string or a moment\n\n      toggle: false, // If true, selecting the currently active date will unset the respective date (same as multi-date behavior)\n\n      // -----------\n      // multi-dates\n      count: 1, // // 2 or more will enable multidate picking. Each date in month view acts as a toggle button, keeping track of which dates the user has selected in order. If a number is given, the picker will limit how many dates can be selected to that number, dropping the oldest dates from the list when the number is exceeded. true equates to no limit. The input’s value (if present) is set to a string generated by joining the dates, formatted, with multidate.separator\n      separator: ',' // Separator for multiple dates when generating the input value\n    },\n    daysOfWeek: {\n      // Values are 0 (Sunday) to 6 (Saturday)\n      disabled: [],   // Days of the week that should be disabled. Example: disable weekends: [0,6]\n      highlighted: [] // Days of the week that should be highlighted. Example: highlight weekends: [0,6].\n    },\n\n    // Popper.js options - see https://popper.js.org/\n    popper: {\n      // any popper.js options are valid here and will be passed to that component\n      // placement: 'right',\n      placement: 'bottom-start',\n      // flipBehavior: ['bottom-start', 'top-start'],\n      removeOnDestroy: true\n    },\n\n    //template: undefined, // if undefined - will use new BaseTemplate().createTemplate()\n\n    // -------------------\n    // callbacks  TODO: better way to do this?\n\n    /*\n     A function that takes a date as a parameter and returns one of the following values:\n\n     - undefined to have no effect\n     - An object with the following properties:\n     disabled: A Boolean, indicating whether or not this date is disabled\n     classes: A String representing additional CSS classes to apply to the date’s cell\n     tooltip: A tooltip to apply to this date, via the title HTML attribute\n     */\n    beforeShowDay: undefined,\n    beforeShowMonth: undefined,\n    beforeShowYear: undefined,\n    beforeShowDecade: undefined,\n    beforeShowCentury: undefined\n  }\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   * TODO: break this into components - ConfigurationManager(? not sure on this one), DateManager, EventManager, Renderer?\n   */\n  class Datepicker extends Base {\n\n    constructor($element, ...configs) {\n      super(Default, Preset.resolve(...configs))\n\n      this.$element = $element\n      this.shown = false\n      this.dates = null //new DateArray() no need to init, #update will init initial round\n\n      // get our own utc instance and configure the locale\n      this.moment = this.newMoment()\n\n      // disallow updates during setup, call after\n      this.allowUpdate = false\n\n      // normalize options that are flexible\n      this.normalizeConfig()\n\n      //\n      this.view = this.config.view.start\n\n      // inline datepicker if target is a div\n      if (this.$element.is('div')) {\n        this.isInline = true\n      }\n      // find the $input right now\n      else if (this.$element.is('input')) {\n        this.$input = this.$element\n      }\n      else {\n        throw new Error(`Target element[${this.$element[0].localName}] is neither a div(inline) nor an input.`)\n      }\n\n      // FIXME: data-datepicker-toggle='#input-id' or whatever pattern bootstrap uses for toggle - `click: () => this.show()` instead of old `component` or add-on\n\n      // initialize the renderer and create the $picker element\n      this.renderer = new Renderer(this)\n\n      // initialize the EventManager\n      this.eventManager = new EventManager(this)\n\n      // turn back on updates\n      this.allowUpdate = true\n      this.update()\n      this.showView()\n\n      if (this.isInline) {\n        this.show()\n      }\n    }\n\n    dispose(dataKey = Data.KEY) {\n      this.hide()\n      this.eventManager.dispose()\n      this.renderer.dispose()\n      this.eventManager = undefined\n      this.renderer = undefined\n      this.popper = undefined\n      super.dispose(dataKey)\n    }\n\n    /**\n     * @returns a new UTC moment configured with the locale\n     */\n    newMoment(...args) {\n      let m = null\n\n      if (args.length < 1) {\n        // if no args, use the current date/time (cannot pass in null otherwise time is zeroed)\n        m = moment()\n      }\n      else {\n        m = moment(...args)\n      }\n\n      m.utc()\n      m.locale(this.config.lang)\n      return m\n    }\n\n    /**\n     * @returns - array of UTC moments selected\n     */\n    getDates() {\n\n      // Depending on the show/hide state when called, this.dates may or may not be populated.\n      //  Use it if populated (i.e. initial #update before show), not based on #isShowing\n      return (this.dates ? this.dates.array : undefined) || this.parseDateArrayFromInput()\n    }\n\n    /**\n     * Determine the viewDate and constrain by the configuration - no side effects\n     *\n     * NOTE: this.viewDate is null after hidden, and this methoud is used by #update to redetermine a new value.\n     *        The result of this method is explicitly not cached, if you want the cached value during a normal\n     *        internal operation, you should be using the `this.viewDate` set by #update\n     * @param fallbackToDefaults - resolve the date first, if not found, fallback to the default config.date.start\n     * @returns - the latest UTC moment selected\n     */\n    getDate(fallbackToDefaults = false) {\n      // Depending on the show/hide state when called, this.dates may or may not be populated.\n      //  Use it if populated (i.e. initial #update before show), not based on #isShowing\n      let dateArray = this.getDates()\n      if (dateArray.length) {\n        // return the last date in the array (go backwards 1 index)\n        return dateArray.slice(-1)[0].clone()\n      }\n\n      // if not found above and not to be resolved by defaults, null\n      if (!fallbackToDefaults) {\n        return null\n      }\n\n      // resolve based on the defaults\n      if (this.viewDate < this.config.date.start) {\n        return this.config.date.start.clone()\n      }\n      else if (this.viewDate > this.config.date.end) {\n        return this.config.date.end.clone()\n      }\n      else {\n        return this.config.date.default.clone()\n      }\n    }\n\n    updateMultidateOrToggle(viewDate) {\n\n      // if multidate is not enabled && and toggle is not true, just update and get out.\n      if (this.config.date.count < 2 && this.config.date.toggle !== true) {\n        this.update(viewDate)\n        return\n      }\n\n      // If nothing passed in, we are clearing all dates\n      if (!viewDate) {\n        this.update(null)\n        return\n      }\n\n      //------------\n      // Multidate enabled\n      //------------\n\n      // We need to operate on a temporary date array, passed to update\n      let newDates = this.dates.copy()\n\n      let index = newDates.contains(viewDate)\n\n      // first check toggle off on a date\n      if (index !== -1) {\n        newDates.remove(index)\n      }\n      // if not a toggle, it's a new date\n      else {\n        newDates.push(viewDate)\n      }\n\n      // constrain the date count by the limit, removing the first\n      while (newDates.length() > this.config.date.count) {\n        newDates.remove(0)\n      }\n\n      // finally call update with the new dates\n      if (newDates.length() === 0) {\n        // if length is 0, pass null to reset the internal dates, otherwise it will look at/parse input\n        this.update(null)\n      }\n      else {\n        this.update(...newDates.array)\n      }\n    }\n\n    /**\n     * Any call stack resulting here means that we are selecting a new date (or dates) and re-rendering.\n     *\n     *\n     * @param momentsOrStrings - one or more - String|moment - optional.  null will clear dates, nothing or empty will resolve dates.\n     * @returns {Datepicker}\n     */\n    update(...momentsOrStrings) {\n      if (!this.allowUpdate) {\n        return this\n      }\n\n      // parse dates and get out if there is no diff\n      let newDates = this.configureNewDateArray(...momentsOrStrings)\n      if (newDates.isSame(this.dates)) {\n        this.debug('no update needed, dates are the same')\n        return\n      }\n\n      // there is a change\n      this.dates = newDates\n\n      // resolve the new viewDate constrained by the configuration\n      this.viewDate = this.getDate(true)\n\n      // set the input value\n      this.$input.val(this.getDateFormatted())\n\n      // re-render the element\n      this.renderer.render()\n\n      // fire the date change\n      this.eventManager.trigger(Event.DATE_CHANGE)\n\n      // fire change on the input to be sure other plugins see it (i.e. validation)\n      this.$input.change()\n\n      // If on the day view && autoclose is enabled - hide\n      if (this.view === View.DAYS && this.config.autoclose) {\n        this.hide()\n      }\n\n      return this\n    }\n\n    /**\n     * Sets a new lower date limit on the datepicker.\n     * Omit (or provide an otherwise falsey value) to unset the limit.\n     * @param dateStart\n     * @returns {Datepicker}\n     */\n    setDateStart(dateStart) {\n      if (dateStart) {\n        // verify/reparse\n        this.config.date.start = this.parseDate(dateStart)\n      }\n      else {\n        // default to beginning of time\n        this.config.date.start = this.startOfAllTime()\n      }\n      // called from #normalizeConfig\n      this.update()\n      return this\n    }\n\n    /**\n     * Sets a new upper date limit on the datepicker.\n     * Omit (or provide an otherwise falsey value) to unset the limit.\n     * @param dateEnd\n     * @returns {Datepicker}\n     */\n    setDateEnd(dateEnd) {\n\n      if (dateEnd) {\n        // verify/reparse\n        this.config.date.end = this.parseDate(dateEnd)\n      }\n      else {\n        // default to beginning of time\n        this.config.date.end = this.endOfAllTime()\n      }\n      // called from #normalizeConfig\n      this.update()\n      return this\n    }\n\n    /**\n     * Sets the days that should be disabled\n     * Omit (or provide an otherwise falsey value) to unset.\n     * @param dates - String|Moment|Array of String|Moment\n     * @returns {Datepicker}\n     */\n    setDatesDisabled(dates) {\n      let dateArray = dates\n      // Disabled dates\n      if (!Array.isArray(dateArray)) {\n        dateArray = [dateArray]\n      }\n\n      let newDisabled = []\n      for (let d of dateArray) {\n        newDisabled.push(this.parseDate(d))\n      }\n      this.config.date.disabled = newDisabled\n      // called from #normalizeConfig\n      this.update()\n      return this\n    }\n\n    /**\n     * Sets the days of week that should be disabled.  See config.daysOfWeek.disabled\n     * Omit (or provide an otherwise falsey value) to unset.\n     * @param days\n     * @returns {Datepicker}\n     */\n    setDaysOfWeekDisabled(days) {\n      this.config.daysOfWeek.disabled = days\n      this.normalizeConfig()\n      this.update()\n      return this\n    }\n\n    /**\n     * Sets the days of week that should be highlighted. See config.daysOfWeek.highlighted\n     * Omit (or provide an otherwise falsey value) to unset.\n     * @param days\n     * @returns {Datepicker}\n     */\n    setDaysOfWeekHighlighted(days) {\n      this.config.daysOfWeek.highlighted = days\n      this.normalizeConfig()\n      this.update()\n      return this\n    }\n\n    // ------------------------------------------------------------------------\n    // protected\n\n    /**\n     *\n     * @param range - a {DateRange} from moment-range - provide a falsey value to unset\n     */\n    setRange(range) {\n      this.range = range\n      this.renderer.render();\n    }\n\n    // ------------------------------------------------------------------------\n    // private\n\n    /**\n     * Change view given the direction.  If past the bottom, it will #hide\n     * @param direction\n     */\n    changeView(direction) {\n      if (direction < 0 && this.view === View.DAYS) {\n        this.hide()\n      }\n      else {\n        let nextView = this.boundedView(this.view + direction)\n        if (this.config.view.disabled.includes(nextView)) {\n\n          // determine general direction\n          let skipDisabledDirection = (direction < 1) ? -1 : 1\n          this.changeView(direction + skipDisabledDirection)\n        }\n        else {\n          this.showView(nextView)\n        }\n      }\n    }\n\n    /**\n     * Get a view within the bounds of min/max\n     * @param view\n     * @returns {number}\n     */\n    boundedView(view) {\n      return Math.max(this.config.view.min, Math.min(this.config.view.max, view))\n    }\n\n    /**\n     * Show a specific view by id.\n     * @param viewId\n     */\n    showView(viewId = this.view) {\n      this.view = viewId\n      this.renderer.showView(this.view)\n    }\n\n    /**\n     *\n     * @param date - start date\n     * @param dir - direction/number of units\n     * @param unit - day|month|year etc to use with moment#add\n     * @returns {*}\n     */\n    moveAvailableDate(date, dir, unit) {\n      let m = date.clone()\n      do {\n        m = m.add(dir, unit)\n\n        if (!this.boundedDate(m))\n          return false\n\n        unit = Unit.DAY\n      }\n      while (this.dateIsDisabled(m))\n\n      return m\n    }\n\n    isShowing() {\n      return this.shown\n    }\n\n    //\n    show() {\n      if (this.isInline || this.isShowing()) {\n        return\n      }\n\n      if (this.$input.attr('readonly') && this.config.enableOnReadonly === false) {\n        return\n      }\n\n      // re-read the dates to populate internal state\n      this.update()\n\n      // popper\n      this.popper = new Popper(this.$element, {\n          contentType: 'node',\n          content: this.renderer.$picker,\n          parent: this.$element.parent()[0]\n        },\n        extend({}, true, {boundariesElement: this.$element}, this.config.popper)\n      )\n      this.shown = true\n      this.eventManager.onShown()\n      return this\n    }\n\n    hide() {\n      if (this.isInline || !this.isShowing()) {\n        return this\n      }\n\n      // on hide, always do the same resets\n      this.viewDate = this.dates = null\n\n      // popper\n      this.popper.destroy()\n      this.popper = undefined\n      this.shown = false\n\n      this.eventManager.onHidden()\n\n      // reset the view\n      this.showView(this.config.view.start)\n\n      return this\n    }\n\n    normalizeConfig() {\n      // disallow updates - must call #update after\n      let originalAllowUpdate = this.allowUpdate\n      this.allowUpdate = false\n\n      // Normalize views as view-type integers\n      this.config.view.start = this.resolveViewType(this.config.view.start)\n      this.config.view.min = this.resolveViewType(this.config.view.min)\n      this.config.view.max = this.resolveViewType(this.config.view.max) // default to years (slightly different than other view resolution)\n      let disabledViews = this.config.view.disabled\n      if (!Array.isArray(disabledViews)) {\n        disabledViews = [disabledViews]\n      }\n      this.config.view.disabled = []\n      for (let disabledView of disabledViews) {\n        this.config.view.disabled.push(this.resolveViewType(disabledView))\n      }\n\n      // Check that the start view is between min and max\n      this.config.view.start = Math.min(this.config.view.start, this.config.view.max)\n      this.config.view.start = Math.max(this.config.view.start, this.config.view.min)\n\n      // Week\n      this.config.week.start %= 7\n      this.config.week.end = (this.config.week.start + 6) % 7\n\n      // Format - setup the format or default to a momentjs format\n      this.config.format = this.config.format || this.moment.localeData().longDateFormat('L')\n\n      // Start/End or Min/max dates\n      this.setDateStart(this.config.date.start)\n      this.setDateEnd(this.config.date.end)\n      this.setDatesDisabled(this.config.date.disabled)\n\n      // Default date - if unspecified, it is now\n      this.config.date.default = this.parseDate(this.config.date.default || this.moment.clone())\n\n      // restore allowUpdate\n      this.allowUpdate = originalAllowUpdate\n    }\n\n    formatDate(mom, format = this.config.format) {\n      return mom.format(format)\n    }\n\n    parseDates(...dates) {\n      //if(!dates || dates.length < 1){\n      //  return []\n      //}\n\n      let results = []\n      for (let date of dates) {\n        if (date) {\n          results.push(this.parseDate(date))\n        }\n      }\n      return results\n    }\n\n    parseDate(value, format = this.config.format) {\n      // @see http://momentjs.com/docs/#/parsing/\n\n      // return any current moment\n      if (moment.isMoment(value)) {\n        if (!value.isValid()) {\n          this.throwError(`Invalid moment: ${value} provided.`)\n        }\n\n        return this.newMoment(value)\n      }\n      else if (typeof value === \"string\") {\n        // parse with locale and strictness\n        let m = moment(value, format, this.config.lang, true)\n\n        if (!m.isValid()) {\n          this.throwError(`Invalid moment: ${value} for format: ${format} and locale: ${this.config.lang}`)\n        }\n\n        return m\n      }\n      else {\n        this.throwError(`Unknown value type ${typeof value} for value: ${this.dump(value)}`)\n      }\n    }\n\n    shouldBeHighlighted(date) {\n      return $.inArray(date.day(), this.config.daysOfWeek.highlighted) !== -1\n    }\n\n    weekOfDateIsDisabled(date) {\n      return $.inArray(date.day(), this.config.daysOfWeek.disabled) !== -1\n    }\n\n    dateIsDisabled(date) {\n      return (\n        this.weekOfDateIsDisabled(date) ||\n        $.grep(this.config.date.disabled,\n          (d) => {\n            return date.isSame(d, Unit.DAY)\n          }\n        ).length > 0\n      )\n    }\n\n    boundedDate(date) {\n      return date.isSameOrAfter(this.config.date.start) && date.isSameOrBefore(this.config.date.end)\n    }\n\n    boundedDates(...dates) {\n      return $.grep(dates, (date) => {\n        return (!this.boundedDate(date) || !date)\n      }, true)\n    }\n\n    startOfDay(moment = this.moment) {\n      return moment.clone().startOf(Unit.DAY)\n    }\n\n    startOfAllTime(moment = this.moment) {\n      return moment.clone().startOf(Unit.YEAR).year(0)\n    }\n\n    endOfAllTime(moment = this.moment) {\n      return moment.clone().endOf(Unit.YEAR).year(9999) // ?? better value to set for this?\n    }\n\n    resolveViewType(view) {\n      if (typeof view === 'string') {\n        let value = null\n        switch (view) {\n          case 'days':\n            value = View.DAYS\n            break\n          case 'months':\n            value = View.MONTHS\n            break\n          case 'years':\n            value = View.YEARS\n            break\n          case 'decades':\n            value = View.DECADES\n            break\n          case 'centuries':\n            value = View.CENTURIES\n            break\n          default:\n            throw new Error(`Unknown view type '${view}'. Try one of: days | months | years | decades | centuries`)\n        }\n        return value\n      }\n      else {\n        return view\n      }\n    }\n\n    clearDates() {\n      this.update(null)\n    }\n\n    getDateFormatted(format = this.config.format) {\n      return this.dates.formattedArray(format).join(this.config.date.separator)\n    }\n\n    /**\n     * resolve a new {DateArray}\n     *\n     * @param dates\n     * @returns {DateArray}\n     */\n    configureNewDateArray(...dates) {\n      if (dates.length > 0) {\n        let newDatesArray = this.parseDates(...dates)\n        newDatesArray = this.boundedDates(...newDatesArray)\n        return new DateArray(...newDatesArray)\n      }\n      else {\n        return new DateArray(...this.parseDateArrayFromInput())\n        // already checks dates inside #parseDatesFromInput\n      }\n    }\n\n    /**\n     * @returns - array of UTC moments\n     */\n    parseDateArrayFromInput() {\n      let value = this.$input.val()\n      let dates\n\n      if (value && this.config.date.count > 1) {\n        dates = value.split(this.config.date.separator)\n      }\n      else {\n        dates = [value]\n      }\n      dates = this.parseDates(...dates)\n      dates = this.boundedDates(...dates)\n      return dates\n    }\n\n    // ------------------------------------------------------------------------\n    // static\n    static _jQueryInterface(config) {\n      //let methodResult = undefined\n      return this.each(\n        function () {\n          let $element = $(this)\n          let data = $element.data(Data.KEY)\n          // Options priority: js args, data-attrs\n          let _config = $.extend(\n            {},\n            $element.data(),\n            typeof config === 'object' && config  // config could be a string method name.\n          )\n\n          // instantiate a Datepicker or a DateRangePicker\n          if (!data) {\n            // FIXME: I really think this should be encapsulated in DateRangePicker, and not here.\n            if ($element.hasClass('input-daterange') || _config.inputs) {\n              data = new DateRangePicker($element,\n                $.extend(_config, {inputs: _config.inputs || $element.find('input').toArray()})\n              )\n            }\n            else {\n              data = new Datepicker($element, _config)\n            }\n            $element.data(Data.KEY, data)\n          }\n\n          // call public methods jquery style\n          if (typeof config === 'string') {\n            if (data[config] === undefined) {\n              throw new Error(`No method named \"${config}\"`)\n            }\n            //methodResult =\n            data[config]()\n          }\n        }\n      )\n\n      //if (methodResult !== undefined) {\n      //  // return method result if there is one\n      //  return methodResult\n      //}\n      //else {\n      //  // return the element\n      //  return this\n      //}\n    }\n  }\n\n  /**\n   * ------------------------------------------------------------------------\n   * Data Api implementation\n   * ------------------------------------------------------------------------\n   */\n  $(document).on(Event.CLICK_DATA_API, Selector.DATA_PROVIDE, function (event) {\n    event.preventDefault()\n    Datepicker._jQueryInterface.call(this, 'show')\n  })\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n  $.fn[JQUERY_NAME] = Datepicker._jQueryInterface\n  $.fn[JQUERY_NAME].Constructor = Datepicker\n  $.fn[JQUERY_NAME].noConflict = () => {\n    $.fn[JQUERY_NAME] = JQUERY_NO_CONFLICT\n    return Datepicker._jQueryInterface\n  }\n\n  return Datepicker\n\n})(jQuery)\n\nexport default Datepicker\n","//import 'babel-polyfill/dist/polyfill'\n//import 'babel-polyfill'\n//import 'core-js/es6/symbol'\n//export * from 'babel-polyfill'\n\nexport {default as Datepicker} from './datepicker'\nexport {default as BS3Template} from './templates/bs4Template'\nexport {default as BS4Template} from './templates/bs4Template'\nexport {default as BMD4Template} from './templates/bmd4Template'\nexport {default as StringTemplate} from './templates/stringTemplate'\n\n// export moment for use with additional locales #13\nimport moment from 'moment'\nwindow.moment = moment\nexport { moment }\n"],"names":["Default","BS4Template","BS3Template","StringTemplate","Key","Keycodes"],"mappings":"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"}